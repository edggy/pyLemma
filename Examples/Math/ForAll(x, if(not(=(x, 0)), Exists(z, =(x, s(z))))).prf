include		$Lemma/Rules/F Rules - FO.inf

proof
"ForAll(x, if(not(=(x, 0)), Exists(z, =(x, s(z)))))" - Sub 2
1	not(=(s(a), 0))										Assumption
2	=(s(a), s(a))										= Intro
.	Exists(z, =(s(a), s(z)))							Exists Intro		2
done

proof
"ForAll(x, if(not(=(x, 0)), Exists(z, =(x, s(z)))))" - Sub 1
1	if(not(=(a, 0)), Exists(z, =(a, s(z))))				Assumption
2	|-(not(=(s(a), 0)), Exists(z, =(s(a), s(z))))		"ForAll(x, if(not(=(x, 0)), Exists(z, =(x, s(z)))))" - Sub 2
.	if(not(=(s(a), 0)), Exists(z, =(s(a), s(z))))		If Intro															2
done

proof
"ForAll(x, if(not(=(x, 0)), Exists(z, =(x, s(z)))))" - Sub 1a
1	not(=(0, 0))										Assumption
2	=(0, 0)												= Intro
3	Contradiction										Contradiction Intro		1, 2
.	Exists(z, =(0, s(z)))								Contradiction Elim		3
done

proof
"ForAll(x, if(not(=(x, 0)), Exists(z, =(x, s(z)))))"
1	|-(not(=(0, 0)), Exists(z, =(0, s(z))))															"ForAll(x, if(not(=(x, 0)), Exists(z, =(x, s(z)))))" - Sub 1a
2	if(not(=(0, 0)), Exists(z, =(0, s(z))))															If Intro															1
3	|-(if(not(=(a, 0)), Exists(z, =(a, s(z)))), if(not(=(s(a), 0)), Exists(z, =(s(a), s(z)))))		"ForAll(x, if(not(=(x, 0)), Exists(z, =(x, s(z)))))" - Sub 1
.	ForAll(x, if(not(=(x, 0)), Exists(z, =(x, s(z)))))												Peano Induction														2, 3
done

proof
"|-(not(=(a, 0)), Exists(z, =(a, s(z))))"
1	not(=(a, 0))											Assumption
2	ForAll(x, if(not(=(x, 0)), Exists(z, =(x, s(z)))))		"ForAll(x, if(not(=(x, 0)), Exists(z, =(x, s(z)))))"
3	if(not(=(a, 0)), Exists(z, =(a, s(z))))					ForAll Elim														2
.	Exists(z, =(a, s(z)))									If Elim															1, 3
done